The ``lazy_matrix_mul`` module
======================

Using ``lazy_matrix_mul``
-------------------

Importing the function from the module:
	>>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

Checking for module docstring:
	>>> m = __import__("101-lazy_matrix_mul").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("101-lazy_matrix_mul").lazy_matrix_mul.__doc__
	>>> len(f) > 1
	True

Checking for PEP8:
	>>> import os
	>>> os.popen("pep8 101-lazy_matrix_mul.py").read()
	''

Checking for last blank line:
	>>> os.popen("cat -e 101-lazy_matrix_mul.py | tail -1").read()[-1]
	'\n'

Checking for passing non-list as m_a:
	 >>> lazy_matrix_mul(None, [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 Exception: m_a must be a list. Can't be multiplied

Checking for passing non-list to m_b:
	 >>> lazy_matrix_mul([[1, 2], [3, 4]], None)
	 Traceback (most recent call last):
	 ...
	 Exception: m_b must be a list. Can't be multiplied

Checking for passing empty m_a:
	 >>> lazy_matrix_mul([], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 Exception: m_a can't be empty. Can't be multiplied

Checking for passing m_a with empty rows:
	 >>> lazy_matrix_mul([[], []], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 Exception: m_a can't be empty. Can't be multiplied

Checking for passing empty m_b:
	 >>> lazy_matrix_mul([[1, 2], [3, 4]], [])
	 Traceback (most recent call last):
	 ...
	 Exception: m_b can't be empty. Can't be multiplied

Checking for passing m_b with empty rows:
	 >>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
	 Traceback (most recent call last):
	 ...
	 Exception: m_b can't be empty. Can't be multiplied

Checking for uneven m_a:
	 >>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 Exception: each row of m_a must be of the same size. Can't be multiplied

Checking for uneven m_b:
	 >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
	 Traceback (most recent call last):
	 ...
	 Exception: each row of m_b must be of the same size. Can't be multiplied

Checking for non-number in list in m_a:
	 >>> lazy_matrix_mul([[1, "Hello"], [3, 4]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 Exception: m_a should contain only integers or floats. Can't be multiplied

Checking for non-number in list in m_b:
	 >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, "Hello"], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 Exception: m_b should contain only integers or floats. Can't be multiplied

Checking for mismatching matrices:
	 >>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4,]])
	 Traceback (most recent call last):
	 ...
	 Exception: m_a and m_b can't be multiplied. Colums of m_a has to be equal to rows of m_b